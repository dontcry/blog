{"remainingRequest":"/Users/dontcry/Project/blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dontcry/Project/blog/node_modules/vuepress-theme-reco/components/Common.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/dontcry/Project/blog/node_modules/vuepress-theme-reco/components/Common.vue","mtime":499162500000},{"path":"/Users/dontcry/Project/blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dontcry/Project/blog/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBOYXZiYXIgZnJvbSAnQHRoZW1lL2NvbXBvbmVudHMvTmF2YmFyJwppbXBvcnQgU2lkZWJhciBmcm9tICdAdGhlbWUvY29tcG9uZW50cy9TaWRlYmFyJwppbXBvcnQgeyByZXNvbHZlU2lkZWJhckl0ZW1zIH0gZnJvbSAnQHRoZW1lL2hlbHBlcnMvdXRpbHMnCmltcG9ydCBQYXNzd29yZCBmcm9tICdAdGhlbWUvY29tcG9uZW50cy9QYXNzd29yZCcKaW1wb3J0IHsgc2V0VGltZW91dCB9IGZyb20gJ3RpbWVycycKaW1wb3J0IG1vZHVsZVRyYW5zaXRvbk1peGluIGZyb20gJ0B0aGVtZS9taXhpbnMvbW9kdWxlVHJhbnNpdG9uJwoKZXhwb3J0IGRlZmF1bHQgewogIG1peGluczogW21vZHVsZVRyYW5zaXRvbk1peGluXSwKCiAgY29tcG9uZW50czogeyBTaWRlYmFyLCBOYXZiYXIsIFBhc3N3b3JkIH0sCgogIHByb3BzOiB7CiAgICBzaWRlYmFyOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IHRydWUKICAgIH0KICB9LAoKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIGlzU2lkZWJhck9wZW46IGZhbHNlLAogICAgICBpc0hhc0tleTogdHJ1ZSwKICAgICAgaXNIYXNQYWdlS2V5OiB0cnVlLAogICAgICBmaXJzdExvYWQ6IHRydWUKICAgIH0KICB9LAoKICBjb21wdXRlZDogewogICAgYWJzb2x1dGVFbmNyeXB0aW9uICgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHRoZW1lQ29uZmlnLmtleVBhZ2UgJiYgdGhpcy4kdGhlbWVDb25maWcua2V5UGFnZS5hYnNvbHV0ZUVuY3J5cHRpb24gPT09IHRydWUKICAgIH0sCgogICAgc2hvdWxkU2hvd05hdmJhciAoKSB7CiAgICAgIGNvbnN0IHsgdGhlbWVDb25maWcgfSA9IHRoaXMuJHNpdGUKICAgICAgY29uc3QgeyBmcm9udG1hdHRlciB9ID0gdGhpcy4kcGFnZQoKICAgICAgaWYgKAogICAgICAgIGZyb250bWF0dGVyLm5hdmJhciA9PT0gZmFsc2UgfHwKICAgICAgICB0aGVtZUNvbmZpZy5uYXZiYXIgPT09IGZhbHNlCiAgICAgICkgcmV0dXJuIGZhbHNlCgogICAgICByZXR1cm4gKAogICAgICAgIHRoaXMuJHRpdGxlIHx8CiAgICAgICAgdGhlbWVDb25maWcubG9nbyB8fAogICAgICAgIHRoZW1lQ29uZmlnLnJlcG8gfHwKICAgICAgICB0aGVtZUNvbmZpZy5uYXYgfHwKICAgICAgICB0aGlzLiR0aGVtZUxvY2FsZUNvbmZpZy5uYXYKICAgICAgKQogICAgfSwKCiAgICBzaG91bGRTaG93U2lkZWJhciAoKSB7CiAgICAgIGNvbnN0IHsgZnJvbnRtYXR0ZXIgfSA9IHRoaXMuJHBhZ2UKICAgICAgcmV0dXJuICgKICAgICAgICB0aGlzLnNpZGViYXIgIT09IGZhbHNlICYmCiAgICAgICAgIWZyb250bWF0dGVyLmhvbWUgJiYKICAgICAgICBmcm9udG1hdHRlci5zaWRlYmFyICE9PSBmYWxzZSAmJgogICAgICAgIHRoaXMuc2lkZWJhckl0ZW1zLmxlbmd0aAogICAgICApCiAgICB9LAoKICAgIHNpZGViYXJJdGVtcyAoKSB7CiAgICAgIHJldHVybiByZXNvbHZlU2lkZWJhckl0ZW1zKAogICAgICAgIHRoaXMuJHBhZ2UsCiAgICAgICAgdGhpcy4kcGFnZS5yZWd1bGFyUGF0aCwKICAgICAgICB0aGlzLiRzaXRlLAogICAgICAgIHRoaXMuJGxvY2FsZVBhdGgKICAgICAgKQogICAgfSwKCiAgICBwYWdlQ2xhc3NlcyAoKSB7CiAgICAgIGNvbnN0IHVzZXJQYWdlQ2xhc3MgPSB0aGlzLiRmcm9udG1hdHRlci5wYWdlQ2xhc3MKICAgICAgcmV0dXJuIFsKICAgICAgICB7CiAgICAgICAgICAnbm8tbmF2YmFyJzogIXRoaXMuc2hvdWxkU2hvd05hdmJhciwKICAgICAgICAgICdzaWRlYmFyLW9wZW4nOiB0aGlzLmlzU2lkZWJhck9wZW4sCiAgICAgICAgICAnbm8tc2lkZWJhcic6ICF0aGlzLnNob3VsZFNob3dTaWRlYmFyCiAgICAgICAgfSwKICAgICAgICB1c2VyUGFnZUNsYXNzCiAgICAgIF0KICAgIH0KICB9LAoKICBtb3VudGVkICgpIHsKICAgIHRoaXMuJHJvdXRlci5hZnRlckVhY2goKCkgPT4gewogICAgICB0aGlzLmlzU2lkZWJhck9wZW4gPSBmYWxzZQogICAgfSkKCiAgICB0aGlzLmhhc0tleSgpCiAgICB0aGlzLmhhc1BhZ2VLZXkoKQogICAgdGhpcy5oYW5kbGVMb2FkaW5nKCkKICB9LAoKICBtZXRob2RzOiB7CiAgICBoYXNLZXkgKCkgewogICAgICBjb25zdCBrZXlQYWdlID0gdGhpcy4kdGhlbWVDb25maWcua2V5UGFnZQogICAgICBpZiAoIWtleVBhZ2UgfHwgIWtleVBhZ2Uua2V5cyB8fCBrZXlQYWdlLmtleXMubGVuZ3RoID09PSAwKSB7CiAgICAgICAgdGhpcy5pc0hhc0tleSA9IHRydWUKICAgICAgICByZXR1cm4KICAgICAgfQoKICAgICAgbGV0IHsga2V5cyB9ID0ga2V5UGFnZQogICAgICBrZXlzID0ga2V5cy5tYXAoaXRlbSA9PiBpdGVtLnRvTG93ZXJDYXNlKCkpCiAgICAgIHRoaXMuaXNIYXNLZXkgPSBrZXlzICYmIGtleXMuaW5kZXhPZihzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCdrZXknKSkgPiAtMQogICAgfSwKICAgIGhhc1BhZ2VLZXkgKCkgewogICAgICBsZXQgcGFnZUtleXMgPSB0aGlzLiRmcm9udG1hdHRlci5rZXlzCiAgICAgIGlmICghcGFnZUtleXMgfHwgcGFnZUtleXMubGVuZ3RoID09PSAwKSB7CiAgICAgICAgdGhpcy5pc0hhc1BhZ2VLZXkgPSB0cnVlCiAgICAgICAgcmV0dXJuCiAgICAgIH0KCiAgICAgIHBhZ2VLZXlzID0gcGFnZUtleXMubWFwKGl0ZW0gPT4gaXRlbS50b0xvd2VyQ2FzZSgpKQoKICAgICAgdGhpcy5pc0hhc1BhZ2VLZXkgPSBwYWdlS2V5cy5pbmRleE9mKHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oYHBhZ2VLZXkke3dpbmRvdy5sb2NhdGlvbi5wYXRobmFtZX1gKSkgPiAtMQogICAgfSwKICAgIHRvZ2dsZVNpZGViYXIgKHRvKSB7CiAgICAgIHRoaXMuaXNTaWRlYmFyT3BlbiA9IHR5cGVvZiB0byA9PT0gJ2Jvb2xlYW4nID8gdG8gOiAhdGhpcy5pc1NpZGViYXJPcGVuCiAgICB9LAoKICAgIC8vIHNpZGUgc3dpcGUKICAgIG9uVG91Y2hTdGFydCAoZSkgewogICAgICB0aGlzLnRvdWNoU3RhcnQgPSB7CiAgICAgICAgeDogZS5jaGFuZ2VkVG91Y2hlc1swXS5jbGllbnRYLAogICAgICAgIHk6IGUuY2hhbmdlZFRvdWNoZXNbMF0uY2xpZW50WQogICAgICB9CiAgICB9LAoKICAgIG9uVG91Y2hFbmQgKGUpIHsKICAgICAgY29uc3QgZHggPSBlLmNoYW5nZWRUb3VjaGVzWzBdLmNsaWVudFggLSB0aGlzLnRvdWNoU3RhcnQueAogICAgICBjb25zdCBkeSA9IGUuY2hhbmdlZFRvdWNoZXNbMF0uY2xpZW50WSAtIHRoaXMudG91Y2hTdGFydC55CiAgICAgIGlmIChNYXRoLmFicyhkeCkgPiBNYXRoLmFicyhkeSkgJiYgTWF0aC5hYnMoZHgpID4gNDApIHsKICAgICAgICBpZiAoZHggPiAwICYmIHRoaXMudG91Y2hTdGFydC54IDw9IDgwKSB7CiAgICAgICAgICB0aGlzLnRvZ2dsZVNpZGViYXIodHJ1ZSkKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy50b2dnbGVTaWRlYmFyKGZhbHNlKQogICAgICAgIH0KICAgICAgfQogICAgfSwKCiAgICBoYW5kbGVMb2FkaW5nICgpIHsKICAgICAgY29uc3QgdGltZSA9IHRoaXMuJGZyb250bWF0dGVyLmhvbWUgJiYgc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgnZmlyc3RMb2FkJykgPT0gdW5kZWZpbmVkID8gMTAwMCA6IDAKICAgICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgdGhpcy5maXJzdExvYWQgPSBmYWxzZQogICAgICAgIGlmIChzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCdmaXJzdExvYWQnKSA9PSB1bmRlZmluZWQpIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oJ2ZpcnN0TG9hZCcsIGZhbHNlKQogICAgICB9LCB0aW1lKQogICAgfQogIH0sCgogIHdhdGNoOiB7CiAgICAkZnJvbnRtYXR0ZXIgKG5ld1ZhbCwgb2xkVmFsKSB7CiAgICAgIHRoaXMuaGFzS2V5KCkKICAgICAgdGhpcy5oYXNQYWdlS2V5KCkKICAgIH0KICB9Cn0K"},null]}